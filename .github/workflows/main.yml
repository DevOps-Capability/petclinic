# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
      
env:
#  AZURE_FUNCTIONAPP_NAME: TestFunctionAppRakesh # set this to your function app name on Azure
#  PACKAGE_DIRECTORY: '${{ github.workspace }}' # set this to the directory which contains pom.xml file
#  JAVA_VERSION: '11' # set this to the java version to use
#  POM_FUNCTIONAPP_NAME: TestFunctionAppRakesh
  
  AZURE_WEBAPP_NAME: TestFunctionAppRakesh  # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: ${{ github.workspace }} # set this to the path to your web app project
  JAVA_VERSION: '1.8'                # set this to the node version to use

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
#          distribution: 'adopt'
          cache: maven
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v4
        with:
          repositories: '[{ "id": "central", "url": "https://repo1.maven.org/maven2" },{ "id": "github", "url": "https://maven.pkg.github.com/rakesh635/*" }]'
          servers: '[{ "id": "github", "username": "rakesh635", "password": "${{ secrets.TOKEN_GITHUB }}" }]'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
#      - name: maven format
#        run: mvn spring-javaformat:apply
#      - name: CodeQualityCheck
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #run: mvn sonar:sonar -Dsonar.projectKey=rakesh635-github -Dsonar.host.url=${{ secrets.DEV_SONARQUBEURL }} -Dsonar.login=${{ secrets.DEV_SONARQUBETOKEN }}
        #run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=rakesh635_CICD -Dsonar.host.url=${{ secrets.DEV_SONARQUBEURL }} -Dsonar.login=${{ secrets.DEV_SONARQUBETOKEN }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=rakesh635_CICD

      - name: Unit Test
        run: |
          pwd
#          mvn test --file pom.xml
##      - name: Build with Maven
##        run: mvn -B package --file pom.xml 
#      - name: Setting
#        run: mvn help:effective-settings
##      - name: Publish Package
##        run: mvn clean deploy
      
      - name: 'Restore Project Dependencies Using Mvn'
        shell: bash
        run: |
          pushd './${{ env.PACKAGE_DIRECTORY }}'
          mvn clean package
#          mvn azure-functions:package
          popd
          pwd
#      - name: 'Run Azure Functions Action'
#        uses: Azure/functions-action@v1
#        id: fa
#        with:
#          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
#          package: './${{ env.POM_XML_DIRECTORY }}/target/${{ env.POM_FUNCTIONAPP_NAME }}'
#          package: '~/work/petclinic/petclinic/target/}'
#          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
#          respect-pom-xml: true
          
#      - name: 'Run Azure Functions Action'
#        uses: Azure/functions-action@v1
#        id: fa
#        with:
#          app-name: 'TestFunctionAppRakesh'
#          slot-name: 'production'
#          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
#          package: './${{ env.PACKAGE_DIRECTORY }}/target/azure-functions/${{ env.POM_FUNCTIONAPP_NAME }}'

      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/target/*.jar'
